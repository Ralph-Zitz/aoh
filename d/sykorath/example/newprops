CONCEPT
        vitems - enhancements
        (additional properties)

DESCRIPTION

         Additional properties (for usage in AddVItem):
         P_NODROP, P_DRINK, P_FOOD, PV_ITEM_LOCATION, P_AMOUNT, P_MAX_AMOUNT


         P_NOGET: 1
                       -> mark the vitem as non getable
         P_NOGET: string
                       -> if someone tries to get it, output the string
         P_NOGET: ({string1})
                       -> if someone tries to get it, send string1 to the
                          interactive player only (usefull for silent msgs!)
         P_NOGET: ({string1,string2})
                       -> if someone tries to get it, send string 1 to the
                          interactive player, string to all other players
                          (who can see in this room!)
         string1,string2 may be closures to function that return a string:
         P_NOGET: ({#'get_the_string_for_interactive_player,
                    #'get_the_string_for_all_other_players})



         PV_ITEM_LOCATION: "filename_to_clone"
                       -> simplest form, will allow to clone the item one
                          time in a reset

         PV_ITEM_LOCATION: #'closure_to_return_the_cloned_item
                       -> with this you can add additional checks, if the
                          player is allowed to get the vitem

                       NOTE: the closure has to return only the cloned
                             object, all other things are done by the room

         NOTE: if no P_AMOUNT is specified, there is always one item available
               during a reset time, you can set P_MAX_AMOUNT to -1 (using:
               P_MAX_AMOUNT: -1) to enable unlimited items to get (like 
               leaves or branches inside a wood)

         P_DRINK: #'closure_to_clone_a_drink_to_drink
                       -> the closure have to return a drink, that is a
                          clone of /std/food, that a player can drink
                          
                          NOTE: do not use /std/drink there (a bottle will
                                be cloned!) - see examples on how to use it
                          
         P_DRINK: ([ property mapping ])
                       -> clones a /std/food and set the properties of the
                          given mapping to this food, then the player will
                          drink it.

                          NOTE: our /std/drink doesn't support actually
                                properties, so this will not work now!

         P_FOOD: #'closure_to_clone_a_food_to_eat
                       -> the closure have to return a food, that is a
                          clone of /std/food, that a player can eat

         P_FOOD: ([ property mapping ])
                       -> clones a /std/food and set the properties of the
                          given mapping to this food, then the player will
                          eat it.

                          NOTE: our /std/food doesn't support actually
                                properties, so this will not work now!

         NOTE: drinks and food - if no P_AMOUNT is specified - the drink/food
               is unlimited, you can eat/drink as often as you want.

         P_AMOUNT: int-number
                       -> set the maximum of available objects (get/take) or
                          the number how often you can drink/eat there.
                          the next reset will reset this value to the initial
                          value (if no P_MAX_AMOUNT is set too!)
                          Limitation of drinks/food/items is possible with
                          using these property

         P_MAX_AMOUNT: if it is set - the reset of the room will set the
                        P_AMOUNT property back to thsi value
                       if this property is set to -1 --> enable unlimited
                       drinks/foods/items to drink/eat/get/take

