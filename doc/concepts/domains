CONCEPT
	domains


DESCRIPTION
	Domains are a means of providing a consistent landscape in
	OSB as well as distributing administration and responsibilty
	to several smaller units.

	Domains are team efforts by several wizards, the minimum being
	three. A domain is a geographically limited area within the whole
	world of OSB. The size of a domain should be roughly 100
	times 100 square kilometres. Nobody is forced to fill this whole
	area with rooms. The idea is to give an imagination about the
	size. You could think of a domain as a small kingdom within a
	larger nation.

	This leads to the question of what should be in a domain. Sticking
	to the picture of a kingdom, there might be several villages, a
	major town, some roads, a river and some unknown wilderness in
	a domain. More, the kingdom's population might consist of mainly
	a specific race. A domain mainly consisting of mountains, might
	house a dwarfen kingdom under the mountain, a realm of deep
	forests might be inhabited by a number of elf tribes. A domain
	may also have guilds, which teach abilities to visitors or
	only members of the guild.

	Races will be chosen by players when they enter the game for the
	first time. Domains which have built up a consistent environment
	for a certain race might be assigned the home town of that race,
	which means that players will start their career in that town
	and will appear there when they login.

	Membership in domains is just an organisational thing and has no
	ramifications for access rights or else. 'Lord' is who feels most
	responsible for the domain, and the other members should accept
	her or him as team leader. However, each domain to its own desire.

	Access rights:

	Domains have their own userid, which is simply the domain name.
	(For info about userids, see the entry in concepts). The
	domain userid can write everywhere in the domain's directory
	tree.
	
	There are several functions in MASTER, which give access to the
	domain membership:
	

	int domain_member(string user, string domain)
	  Returns 1 if user is a member of domain

	int domain_vice(string user, string domain)
	  Returns 1 if user is the Vice Lord  of the domain

	int domain_master(string user, string domain)
	  Returns 1 if user is the Lord of the domain

	int add_domain_member(string user, string domain)
	  Adds a user to a domain.

	int add_domain_vice(string user, string domain)
	  Makes a user Vice Lord of a domain.

	int add_domain_master(string user, string domain)
	  Makes a user Lord of a domain.

	int remove_domain_member(string user, string domain)
	  Removes membership of user in domain.

	int remove_domain_vice(string user, string domain)
	  Removes a domain Lord user.

	int remove_domain_master(string user, string domain)
	  Removes a domain Lord user.


SEE ALSO
	races(C), guilds(C)
