OBJECT
	/obj/skillmaster

UPDATE
	Mateese, 05-Jun-1994, 19:30 MET

SYNOPSIS
	#include <config.h>
	#include <skillmaster.h>

	SKILLMASTER->...


IMPORTANT
	This server is the central dispatcher for all skill related
	queries.


DESCRIPTION
	This server contains all the guild independant skills, and is
	also the dispatcher for all skill related queries.
	Queries for skills not served by this object are dispatched to
	subsidiary servers, which are stored in a list. Most of these
	servers are set into the list in the objects create(), but
	some may be added at runtime.

	The officially approved skills and skillservers are hardcoded
	into the skillmaster.

	Of the normal /std/skillmaster functions, the following are
	redefined as follows:

	  mixed * QuerySkill (string name)
	  mixed * ResolveSkill (string name, void|object|string receiver)
	  int ComputeSkill (string name, void|mixed * data, void|object obj)
	    These work as usual, except that the skill 'name' is
	    searched in the objects own database as well as in those
	    of the subsidiary servers.
	    If it is served by a subsidiary server, its function is
	    called.

          void AddSkill ( string name
                        , string stat1, mixed stat1factor
                        , string stat2, mixed stat2factor
                        , mixed skillfactor
                        , mixed learnfactor
                        , mixed maxvalue
	                , mixed extra
                        )
          void RemoveSkill ( string name )
          mixed * SetSkill ( string name, mixed *data )
	    Calls to these functions will succeed only if done by the
	    server object itself, or by an archwizard.

	Note that both HasSkill() and QuerySkills() still operate just
	on the skills managed by the skillmaster itself!


	The subsidiary servers are stored as a builtin property

	  mapping P_SERVERS  "Servers"
	    Indexed by the filename of the servers, the mapping
	    contains for each server the object by whom it was added to
	    the list: either the skillmaster object, or the
	    interactive wizard.
	    The call to SetServers() is guarded such that only the
	    skillmaster itself or an archwizard may perform it.

	  void AddServer (string name)
	    Add the server with the filename 'name' to the list of
	    subsidiary servers. An existing entry would be
	    overwritten.

	  void RemoveServer (string name)
	    Remove the server with the filename 'name' from the list
	    of subsidiary servers, if it is on it at all.
	    If the server was added manually by a wizard, only this
	    wizard or an archwizard may remove it again.


	To speed up operation, the skillmaster caches internally which
	skill is served by which server. This data can be used for own
	purposes:

	  object FindSkillServer (string name)
	    Return the server object serving the skill 'name'. If
	    there is none (or the server can't be loaded), 0 is
	    returned.


INHERITANCE TREE

       /obj/skillmaster
         `-/std/skillmaster


SEE ALSO
       skills(C), skillmaster(S)
