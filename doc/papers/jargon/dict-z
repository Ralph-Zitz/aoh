= Z =
=====

   :zap:  1. n. Spiciness.  2. vt. To make food spicy.  3. vt. To
make someone `suffer' by making his food spicy.  (Most hackers    love
spicy food.  Hot-and-sour soup is considered wimpy unless it    makes
you wipe your nose for the rest of the meal.)  See    {zapped}.  4. vt.
To modify, usually to correct; esp. used    when the action is
performed with a debugger or binary patching    tool.  Also implies
surgical precision.  "Zap the debug level to 6    and run it again."
In the IBM mainframe world, binary patches are    applied to programs
or to the OS with a program called    `superzap', whose file name is
`IMASPZAP' (possibly contrived    from I M A SuPerZAP).  5. vt. To
erase or reset.  6. To {fry} a    chip with static electricity.  "Uh oh
-- I think that lightning    strike may have zapped the disk
controller."

   :zapped: adj.  Spicy.  This term is used to distinguish    between
food that is hot (in temperature) and food that is    _spicy_-hot.  For
example, the Chinese appetizer Bon Bon    Chicken is a kind of chicken
salad that is cold but zapped; by    contrast, {vanilla} wonton soup is
hot but not zapped.  See also    {{oriental food}}, {laser chicken}.
See {zap}, senses 1 and    2.

   :zen: vt.  To figure out something by meditation or by a    sudden
flash of enlightenment.  Originally applied to bugs, but
occasionally applied to problems of life in general.  "How'd you
figure out the buffer allocation problem?"  "Oh, I zenned it."
Contrast {grok}, which connotes a time-extended version of    zenning a
system.  Compare {hack mode}.  See also {guru}.

   :zero: vt.  1. To set to 0.  Usually said of small pieces of
data, such as bits or words (esp. in the construction `zero    out').
2. To erase; to discard all data from.  Said of disks and
directories, where `zeroing' need not involve actually writing
zeroes throughout the area being zeroed.  One may speak of    something
being `logically zeroed' rather than being    `physically zeroed'.  See
{scribble}.

   :zero-content: adj.  Syn. {content-free}.

   :Zero-One-Infinity Rule: prov.  "Allow none of {foo},    one of
{foo}, or any number of {foo}."  A rule of thumb for    software
design, which instructs one to not place {random}    limits on the
number of instances of a given entity (such as:    windows in a window
system, letters in an OS's filenames, etc.).     Specifically, one
should either disallow the entity entirely, allow    exactly one
instance (an "exception"), or allow as many as the    user wants -
address space and memory permitting.

   The logic behind this rule is that there are often situations where
 it makes clear sense to allow one of something instead of none.
However, if one decides to go further and allow N (for N > 1), then
why not N+1?  And if N+1, then why not N+2, and so on?  Once above
1, there's no excuse not to allow any N; hence, {infinity}.

   Many hackers recall in this connection Isaac Asimov's SF novel
"The Gods Themselves" in which a character announces that the    number
2 is impossible - if you're going to believe in more than    one
universe, you might as well believe in an infinite number of    them.

   :zeroth: /zee'rohth/ adj.  First.  Among software designers,
comes from C's and LISP's 0-based indexing of arrays.  Hardware
people also tend to start counting at 0 instead of 1; this is
natural since, e.g., the 256 states of 8 bits correspond to the
binary numbers 0, 1, ..., 255 and the digital devices known as
`counters' count in this way.

   Hackers and computer scientists often like to call the first
chapter of a publication `Chapter 0', especially if it is of an
introductory nature (one of the classic instances was in the First
Edition of {K&R}).  In recent years this trait has also been
observed among many pure mathematicians (who have an independent
tradition of numbering from 0).  Zero-based numbering tends to
reduce {fencepost error}s, though it cannot eliminate them    entirely.

   :zigamorph: /zig'*-morf/ n.  1. Hex FF (11111111) when    used as a
delimiter or {fence} character.  Usage: primarily at    IBM shops.  2.
[proposed] n. The Unicode non-character U+FFFF    (1111111111111111), a
character code which is not assigned to any    character, and so is
usable as end-of-string.  (Unicode is a 16-bit    character code
intended to cover all of the world's writing    systems, including
Latin, Greek, Cyrillic, Chinese, hiragana,    katakana, Devanagari,
Thai, Laotian and many other    scripts - support for {elvish} is
planned for a future    release).

   :zip: vt.  [primarily MS-DOS] To create a compressed archive    from
a group of files using PKWare's PKZIP or a compatible    archiver.  Its
use is spreading now that portable implementations    of the algorithm
have been written.  Commonly used as follows:    "I'll zip it up and
send it to you."  See {tar and feather}.

   :zipperhead: n.  [IBM] A person with a closed mind.

   :zombie: n.  [Unix] A process that has died but has not yet
relinquished its process table slot (because the parent process
hasn't executed a `wait(2)' for it yet).  These can be seen in
`ps(1)' listings occasionally.  Compare {orphan}.

   :zorch: /zorch/  1. [TMRC] v. To attack with an inverse heat
sink.  2. [TMRC] v. To travel, with v approaching c    [that is, with
velocity approaching lightspeed --ESR].  3. [MIT]    v. To propel
something very quickly.  "The new comm software is    very fast; it
really zorches files through the network."  4. [MIT]    n.  Influence.
Brownie points.  Good karma.  The intangible and    fuzzy currency in
which favors are measured.  "I'd rather not ask    him for that just
yet; I think I've used up my quota of zorch with    him for the week."
5. [MIT] n. Energy, drive, or ability.  "I    think I'll {punt} that
change for now; I've been up for 30 hours    and I've run out of
zorch."  6. [MIT] v. To flunk an exam or    course.

   :Zork: /zork/ n.  The second of the great early experiments    in
computer fantasy gaming; see {ADVENT}.  Originally written    on MIT-DM
during 1977-1979, later distributed with BSD Unix (as a    patched,
sourceless RT-11 FORTRAN binary; see {retrocomputing})    and
commercialized as `The Zork Trilogy' by {Infocom}.  The    FORTRAN
source was later rewritten for portability and released to    Usenet
under the name "Dungeon".  Both FORTRAN "Dungeon" and    translated C
versions are available at many FTP sites.  See also    {grue}.

   :zorkmid: /zork'mid/ n.  The canonical unit of currency in
hacker-written games.  This originated in {Zork} but has spread    to
{nethack} and is referred to in several other games.

