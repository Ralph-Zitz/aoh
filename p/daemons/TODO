p/daemons/channel_d.c: * TODO:  Guild/Assoc/Domain channels at RegisterChannel, RegisterUser
p/daemons/channel_d.c: * TODO:: object used as sender for msg_xx is wrong
p/daemons/channel_d.c: * TODO:: There is a problem with the chan-mapping, because everything
p/daemons/channel_d.c: * TODO:: inside is returned by reference and could me manipulated
p/daemons/channel_d.c: * TODO:: The handling of permanent channels and the initialization on
p/daemons/channel_d.c: * TODO:: load of the daemon is buggy. It should be aware of handling
p/daemons/channel_d.c: * TODO:: changes in permchan-datalength and much more...
p/daemons/channel_d.c:   * TODO: override might be secured somehow
p/daemons/dict.c: * TODO: Think about a german/english dict.
p/daemons/gameclock.c: * TODO: The Clocktower should stop if nobody is there.
p/daemons/gameclock.c: * TODO: QueryDaytime() should to into nightday
p/daemons/gameclock.c: * TODO: QueryUptime() should be made sefun, breaking up seconds into YMDhms.
p/daemons/inet3/channel.c:    /* TODO: need to work on using channel-t appropriately */
p/daemons/inet3/channel.c:  /* TODO: do rest of emote now... */
p/daemons/inet3/emoteto.c:    /* TODO: good idea, stores last intermud sender in player object, do that
p/daemons/inet3/locate.c:/* TODO: Locate needs to handle editing, time handling of reply is bad */
p/daemons/inet3_d.c:  /* TODO:  for now, we need to set the password to 0. the router doesn't
p/daemons/inet3_d.c:   * TODO:: send "up" status changes when we reconnect (general problem 
p/daemons/inet3_d.c:   * TODO:: with the the router
p/daemons/inet3_d.c:  /* TODO: add these
p/daemons/inet3_d.c:  /* TODO: + oob::Status(); */
p/daemons/inet3_d.c:  /* TODO: add these
p/daemons/inet3_d.sic:  /* TODO:  for now, we need to set the password to 0. the router doesn't
p/daemons/inet3_d.sic:   * TODO:: send "up" status changes when we reconnect (general problem 
p/daemons/inet3_d.sic:   * TODO:: with the the router
p/daemons/inet3_d.sic:  /* TODO: add these
p/daemons/inet3_d.sic:  /* TODO: + oob::Status(); */
p/daemons/inet3_d.sic:  /* TODO: add these
p/daemons/inetd.c: * TODO:  find the reason why something constantly sends data to the udp 
p/daemons/inetd.c: * TODO:: port which is invalid, define LOG_INVALID to see if it still
p/daemons/inetd.c: * TODO:: takes place.
p/daemons/voteserver.c:// TODO: Implement the following if case if all wizards have been logged in
