======================== Function ==================================
+  int OnSucceed<skill><name>(int skillvalue,object who)
+  int OnFail<skill><name>(int skillvalue,object who)
+  int Cannot<skill><name>(object who) 

  Example:
  int OnSucceedClimbTree(int skillvalue,object who)
  int OnFailClimbTree(int skillvalue,object who)
  int CannotClimbTree(object who) 

  "skillvalue" is a 1/10 percent number how well the skill check
  succeeded or failed. It ranges from 0..1000 (0..-1000) and can
  be used to differ whether a skill succeed (failed) very much,
  normal or a little. "who" is usually this_player() and the one
  who performed the skill check.
  Both arguments can be ignored if you do not want to make some
  special actions.

  The "OnSucceedClimbTree" function is called when the skill check
  is successful, i.e. the player typed "climb tree" and the skill-
  system decided the player was successful. 

  The "OnFailClimbTree" respectively is called when the skillcheck
  failed.

  The "CannotClimbTree" will be called to check whether the player
  is allowed to perform the action "climb". If it returns 1 the
  command is not executed and a set "notify_fail" text is given
  to the player. This can be used if e.g. certain races are not
  allowed to climb the tree.


+  void AddSkill(mixed skill,string name,int difficulty,[mapping args]);

  "skill" is the type of skill you wish to use (see the docu for 
  UseSkill). 
  "name" is a idendifier for the skill and will be used to name
  the functions ("OnSucceed<skill><name> yields e.g. 
  "OnSucceedClimbTree" if name=="tree" or "Tree" and you sue the 
  climb skill SK_CLIMB).
  "difficulty" is the difficulty in 1/10 % (0..1000) the skillcheck
  shall have. A very difficulty tree should have 1000 and a normal
  one 500.
  "args" are not yet decided what they shall be...
  

======================== Example ====================================

create()
{
  AddSkill(SK_CLIMB,"Tree",500,[mapping]);
  AddDetail(({"Tree","large tree","giantic tree"}),"...");
  ...
}
int OnSucceedClimbTree(int skillvalue,object who)
{
  tell_object(who,"You climb the tree and reach the clouds.\n");
  who->move("room/clouds",M_GO);
  return 1;
}


======================== Implementation =============================

	AddRoomCmd("climb","cmd_climb");

	int cmd_climb(string str)
	{
	  if (!MatchString("Tree",str)) return 0;
	  if (CannotClimbTree(who)) return 0;
	  skill=UseSkill(SK_CLIMB,<500>,TP);
	  if (skill>0 && call_other("OnSucceedClimb"+<Tree>") ...
	  else if (skill<0 && call_other("OnFailClimb"+<Tree>") ...

          return 1;	  
	}
	
	
