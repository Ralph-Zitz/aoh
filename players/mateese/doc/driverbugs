Bug in player::valid_write():

 objekte mit filenamen /players/./macbeth/* haben zugriff
 auf ganz /players/./*
 abgesehen davon gefaellt mir bei previous_object() der
 check auf !=this_player() nicht... klappt zwar, sollte aber
 !=this_object() heissen

 Jetzt sag bloss, der Filename wird beim Erzeugen von
 Objekten noch immer nicht vom Gamedriver normalisiert (abgesehen
 davon,dass ich die .-Notation andauernd vergesse)
-----------------------------------------------------------------------------
Bug in Game::init():

 ach ja, und der init() bug ist auch noch drin...
 aber wenn ihr den rausmacht, laeuft dein nightfile nicht
 mehr... bad luck...

 inherit "obj/living";
 reset() { move_object(this_object(),find_player("deepthought")); }
 init() { call_out("suicide",1); write_file("...","..."); }
 suicide() { destruct(this_object()); }
 
 gibt in init:
  TP = std/player#2832
  TP1 = std/player#628
  PO = players/mateese/obj/xfoo

----------------------------------------------------------------------------
Bug in player::save_me() / Game::save_object():

/open/xx.c:
 inherit "std/player";
 reset(arg)
 {
  if (arg) return;
  if (!restore_object("save/m/macbeth"))
    return;
  level = 25;
  save_me(1);
 }

 save_object() schaut sich den internen Namen des Programms an, nicht den
 des Objekts, sprich dessen file_name().
 Aber dein Code ist doch /open/xx.c, und nichts aus /std room obj
 eben. aber er macht inherit "std/player"
 und das save_object() steht in std/player
 ach ja, und /obj/player geht natuerlich auch noch...

 save_object() von objekten aus /std, /room und /obj darf
 UEBERALLHIN saven.
 daher auch der post office bug, wenn man player files zerstoeren will...
 Cc: ../../save/m/tares oder so was...
 d.h. euer post office ist ja modifiziert... da duerfte das kein problem 
 sein

----------------------------------------------------------------------------

