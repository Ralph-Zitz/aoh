<html>
<head>
<title>Rejecting items</title>
</head>
<body>
<h1>How to code a powerful give 'command'</h1>

Okay the last examples showed us how to code a give command (or how 
to notify moving of items) into our quest-objects and we coded a give_back()
function that is called, whenever we do not need the given items. 

<p>

Now we want to reject the item <b>before</b> it is moved into our
quest-object (which is normally an npc). The mudlib supports us with the function 
<code>allow_enter()</code> (see 'man moving') for doing this.

<p>

The code for the problem looks now like the following:

<p>
<pre>
int allow_enter(int method,mixed extra) {
  if (method==M_GIVE) {
    if (!previous_object()->id("__cutted_wooden_stick_quest_id__")) {
      if (!previous_object()->QueryShort()) return ME_OK;
      write("Uhh I don't need this....\n");
      return ME_NO_ENTER;
    }
  }
  // objects moved with other methods or the right id can enter
  return ME_OK;
}

void notify_enter (object from,int method, mixed extra) {
  ::notify_enter(from, method, extra);
  if (M_GIVE == method) {
    if (!previous_object()->id("__cutted_wooden_stick_quest_id__")) return;
    this_player()->RegisterCmdFun("give_right_item",previous_object());
  }
}
</pre>

Check first the move-method, then check if the item has the right id, if not
check if it is an invisible item (QueryShort()==0).<br>
Reject any item, which is 'given' and not owns the right id (but let invisible 
items enter).
<br>
The additional check to id() inside notify_enter()
is needed, because it may be an invisible item
moved by 'give' (should not happen normally, but you don't know, what happens
inside other code written by other wizards).

<p>

Now we have to code the same function give_right_item() as before. it is right exactly 
the same as shown in the other examples.

<p>

<a href="#back">Back to overview</a>

<p>
(C) Magictcs - 1998
</body>
</html>

